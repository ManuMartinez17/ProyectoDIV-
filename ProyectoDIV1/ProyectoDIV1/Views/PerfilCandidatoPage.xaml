<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             xmlns:combobox="clr-namespace:Syncfusion.XForms.ComboBox;assembly=Syncfusion.SfComboBox.XForms" 
             xmlns:inputLayout="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms" 
             xmlns:viewmodels="clr-namespace:ProyectoDIV1.ViewModels" xmlns:behaviour="clr-namespace:ProyectoDIV1.Helpers.Behaviours" 
             xmlns:converter="clr-namespace:ProyectoDIV1.Helpers.Converters" x:DataType="viewmodels:PerfilCandidatoViewModel"
             xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:fftransformations="clr-namespace:FFImageLoading.Transformations;assembly=FFImageLoading.Transformations"
             x:Class="ProyectoDIV1.Views.PerfilCandidatoPage">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converter:InverseBoolConverter x:Key="InverseBoolConverter"/>
            <converter:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <StackLayout AbsoluteLayout.LayoutBounds="0,0,1,1"
                     AbsoluteLayout.LayoutFlags="All" Margin="15,0"
                     Spacing="40"
                       Padding="15,15,15,15">
            <ScrollView>
                <StackLayout Spacing="10">
                    <ffimageloading:CachedImage Aspect="AspectFit"
                                                Source="{Binding Imagen}" 
                                                CacheDuration= "50"
                                                HeightRequest="150"
                                                Margin="5"
                                                RetryCount= "3"
                                                RetryDelay= "600">
                    <ffimageloading:CachedImage.Transformations>
                        <fftransformations:CircleTransformation />
                    </ffimageloading:CachedImage.Transformations>
                    <ffimageloading:CachedImage.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding cambiarImagenCommand}"/>
                    </ffimageloading:CachedImage.GestureRecognizers>
                    </ffimageloading:CachedImage>

                    <!--nombre-->
                    <inputLayout:SfTextInputLayout Hint="Nombres" 
                                                   ContainerType="Outlined">
                        <Entry Text="{Binding Candidato.Nombre.Value}" 
                         Placeholder="Nombre">
                        <Entry.Behaviors>
                            <behaviour:EntryLineValidationBehaviour IsValid="{Binding Candidato.Nombre.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>
                    </inputLayout:SfTextInputLayout>
                    <Label Text="{Binding Candidato.Nombre.Errors, Converter={StaticResource FirstValidationErrorConverter}}" 
                        IsVisible="{Binding Candidato.Nombre.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>
                    <!--/nombre-->

                    <!--apellido-->
                    <inputLayout:SfTextInputLayout Hint="Apellidos" 
                                                   ContainerType="Outlined">
                        <Entry Text="{Binding Candidato.Apellido.Value}" 
                         Placeholder="Apellido">
                        <Entry.Behaviors>
                            <behaviour:EntryLineValidationBehaviour IsValid="{Binding Candidato.Apellido.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>
                    </inputLayout:SfTextInputLayout>
                    <Label Text="{Binding Candidato.Apellido.Errors, Converter={StaticResource FirstValidationErrorConverter}}" 
                        IsVisible="{Binding Candidato.Apellido.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>
                    <!--/apellido-->

                    <!--email-->
                    <inputLayout:SfTextInputLayout Hint="Email" 
                                                   ContainerType="Outlined">
                    <Entry Text="{Binding Candidato.Email.Value}" 
                         Placeholder="Email">
                        <Entry.Behaviors>
                            <behaviour:EntryLineValidationBehaviour IsValid="{Binding  Candidato.Email.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>
                    </inputLayout:SfTextInputLayout>
                    <Label Text="{Binding  Candidato.Email.Errors,  Converter={StaticResource FirstValidationErrorConverter}}" 
                        IsVisible="{Binding  Candidato.Email.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>
                    <!--/Last Name-->

                    <!--email-->
                    <inputLayout:SfTextInputLayout Hint="Celular" 
                                                   ContainerType="Outlined">
                    <Entry Text="{Binding Candidato.Celular.Value}" 
                         Keyboard="Telephone"  MaxLength="10"
                          Placeholder="Celular">
                        <Entry.Behaviors>
                            <behaviour:EntryLineValidationBehaviour IsValid="{Binding  Candidato.Celular.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>
                    </inputLayout:SfTextInputLayout>

                    <Label Text="{Binding  Candidato.Celular.Errors,  Converter={StaticResource FirstValidationErrorConverter}}" 
                        IsVisible="{Binding  Candidato.Celular.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>
                    <!--/email-->

                    <!--fecha de nacimiento-->
                    <inputLayout:SfTextInputLayout Hint="Fecha de nacimiento" 
                                                   ContainerType="Outlined">
                        <DatePicker Date="{Binding Candidato.FechaDeNacimiento.Value}"/>
                    </inputLayout:SfTextInputLayout>
                    <Label Text="{Binding  Candidato.FechaDeNacimiento.Errors, Converter={StaticResource FirstValidationErrorConverter}}" 
                        IsVisible="{Binding  Candidato.FechaDeNacimiento.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>

                    <!--/fecha de nacimiento-->

                    <!--categoria servicio-->
                    <inputLayout:SfTextInputLayout Hint="Profesion" FocusedColor="#0450C2" HeightRequest="70" ContainerType="Outlined"
                                                   OutlineCornerRadius="8">
                        <combobox:SfComboBox SelectedItem="{Binding Candidato.Categoria.Value}" DataSource="{Binding TiposDeCategoria}">
                        </combobox:SfComboBox>
                    </inputLayout:SfTextInputLayout>
                    <Label Text="{Binding  Candidato.Categoria.Errors, Converter={StaticResource FirstValidationErrorConverter}}" 
                        IsVisible="{Binding  Candidato.Categoria.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>
                    <!--/categoria servicio-->
                    
                    <!--departamento-->
                    <inputLayout:SfTextInputLayout Hint="Departamento"
                                                   ContainerType="Outlined">
                        <Picker
                                ItemsSource="{Binding DepartamentosLista}"
                                SelectedItem="{Binding Candidato.Departamento.Value}"
                               />
                    </inputLayout:SfTextInputLayout>

                    <Label Text="{Binding  Candidato.Departamento.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                        IsVisible="{Binding  Candidato.Departamento.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>
                    <!--/departamento-->


                    <!--ciudad-->
                    <inputLayout:SfTextInputLayout Hint="Ciudad"
                                                   ContainerType="Outlined">
                        <Picker ItemDisplayBinding="{Binding Nombre}"
                                ItemsSource="{Binding CiudadesLista}"
                                SelectedItem="{Binding Ciudad}"
                               />
                    </inputLayout:SfTextInputLayout>
                    <Label Text="{Binding  Candidato.Ciudad.Errors, Converter={StaticResource FirstValidationErrorConverter}}" 
                        IsVisible="{Binding  Candidato.Ciudad.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>
                    <!--/ciudad-->

                    <!--Password-->
                    <inputLayout:SfTextInputLayout Hint="Contraseña" 
                                                   EnablePasswordVisibilityToggle="true"
                                                   ContainerType="Outlined">
                        <Entry Text="{Binding Candidato.Password.Item1.Value}" IsPassword="True"
                         Placeholder="Contraseña">
                        <Entry.Behaviors>
                            <behaviour:EntryLineValidationBehaviour IsValid="{Binding Candidato.Password.Item1.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>
                    </inputLayout:SfTextInputLayout>
                    <Label Text="{Binding Candidato.Password.Item1.Errors, Converter={StaticResource FirstValidationErrorConverter}}" 
                        IsVisible="{Binding Candidato.Password.Item1.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>
                    <!--/Password-->



                    <!-- confirm Password-->
                    <inputLayout:SfTextInputLayout Hint="confirmar contraseña" 
                                                   EnablePasswordVisibilityToggle="true"
                                                   ContainerType="Outlined">
                        <Entry Text="{Binding Candidato.Password.Item2.Value}" IsPassword="True"
                         Placeholder="Confirmar Contraseña">
                        <Entry.Behaviors>
                            <behaviour:EntryLineValidationBehaviour IsValid="{Binding Candidato.Password.Item2.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>
                    </inputLayout:SfTextInputLayout>
                    <Label Text="{Binding Candidato.Password.Item2.Errors, Converter={StaticResource FirstValidationErrorConverter}}" 
                        IsVisible="{Binding Candidato.Password.Item2.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>
                    <!--/confirm Password-->
                </StackLayout>
            </ScrollView>
            <Button x:Name="insertar"
						FontFamily="Lato"
						FontAttributes="Bold"
						HorizontalOptions="Center"
						Command="{Binding InsertCommand}"
						FontSize="14"
						TextColor="White"
						BackgroundColor="#705E78"
						VerticalOptions="EndAndExpand"
						Text="REGISTRAR"/>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>